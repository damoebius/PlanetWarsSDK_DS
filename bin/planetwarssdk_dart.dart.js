// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $ = Isolate.$isolateProperties;
var $$ = {};

// Classes
$$.ListIterator = {"": "Object;_iterable,_length,_index,_current",
  get$current: function() {
    return this._current;
  },
  moveNext$0: function() {
    var t1, t2, t3;
    t1 = this._length;
    t2 = this._iterable;
    if (t1 !== t2.length)
      throw $.wrapException($.ConcurrentModificationError$(t2));
    t3 = this._index;
    if (t3 === t1) {
      this._current = null;
      return false;
    }
    this._current = $.JSArray_methods.elementAt$1(t2, t3);
    this._index = this._index + 1;
    return true;
  }
};

$$.Interceptor = {"": "Object;",
  toString$0: function(receiver) {
    return "Instance of '" + $.S($.Primitives_objectTypeName(receiver)) + "'";
  }
};

$$.JSFunction = {"": "Interceptor;",
  toString$0: function(receiver) {
    return "Closure";
  }
};

$$.JSBool = {"": "bool/Interceptor;",
  toString$0: function(receiver) {
    return String(receiver);
  }
};

$$.JSNull = {"": "Interceptor;",
  toString$0: function(receiver) {
    return "null";
  }
};

$$.JSArray = {"": "List/Interceptor;",
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  toString$0: function(receiver) {
    var result = $.StringBuffer$("");
    $.ToString__emitValue(receiver, result, $.List_List($));
    return result._contents;
  },
  get$iterator: function(receiver) {
    return $.ListIterator$(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (index >= receiver.length || index < 0)
      throw $.wrapException($.RangeError$value(index));
    return receiver[index];
  },
  $asList: null,
  $asIterable: null,
  $isList: true,
  $isIterable: true
};

$$.JSMutableArray = {"": "JSArray;", $asList: function () { return [null]; }, $asIterable: function () { return [null]; }};

$$.JSFixedArray = {"": "JSMutableArray;"};

$$.JSExtendableArray = {"": "JSMutableArray;"};

$$.DartError = {"": "Object;",
  get$stack: function() {
    return this.stack;
  },
  toString$0: function(_) {
    var dartException = this.dartException;
    if (!!Error.captureStackTrace || this.get$stack() == null)
      return $.toString$0(dartException);
    else
      return $.S(dartException) + "\n" + $.S(this.get$stack());
  },
  DartError$1: function(dartException) {
    this.dartException = dartException;
    this.toString = $.DartError_toStringWrapper.call$0;
  }
};

$$.Null = {"": "Object;"};

$$.JSNumber = {"": "num/Interceptor;",
  toString$0: function(receiver) {
    if (receiver === 0 && 1 / receiver < 0)
      return "-0.0";
    else
      return "" + receiver;
  },
  $sub: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException($.ArgumentError$(other));
    return receiver - other;
  },
  $gt: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException($.ArgumentError$(other));
    return receiver > other;
  },
  $ge: function(receiver, other) {
    return receiver >= other;
  },
  $isnum: true
};

$$.JSInt = {"": "int/JSNumber;", $isint: true, $isnum: true};

$$.JSDouble = {"": "double/JSNumber;", $isnum: true};

$$.JSString = {"": "String/Interceptor;",
  codeUnitAt$1: function(receiver, index) {
    if (index < 0)
      throw $.wrapException($.RangeError$value(index));
    if (index >= receiver.length)
      throw $.wrapException($.RangeError$value(index));
    return receiver.charCodeAt(index);
  },
  substring$2: function(receiver, startIndex, endIndex) {
    if (endIndex == null)
      endIndex = receiver.length;
    if (typeof endIndex !== "number")
      $.throwExpression($.ArgumentError$(endIndex));
    if (startIndex < 0)
      throw $.wrapException($.RangeError$value(startIndex));
    if ($.JSInt_methods.$gt(startIndex, endIndex))
      throw $.wrapException($.RangeError$value(startIndex));
    if ($.$gt$n(endIndex, receiver.length))
      throw $.wrapException($.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (index >= receiver.length || index < 0)
      throw $.wrapException($.RangeError$value(index));
    return receiver[index];
  },
  $isString: true
};

$$.NullThrownError = {"": "Object;",
  toString$0: function(_) {
    return "Throw of null.";
  }
};

$$.ArgumentError = {"": "Object;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 != null)
      return "Illegal argument(s): " + $.S(t1);
    return "Illegal argument(s)";
  }
};

$$.RangeError = {"": "ArgumentError;message",
  toString$0: function(_) {
    return "RangeError: " + $.S(this.message);
  }
};

$$.ConcurrentModificationError = {"": "Object;modifiedObject",
  toString$0: function(_) {
    return "Concurrent modification during iteration: " + $.Error_safeToString(this.modifiedObject) + ".";
  }
};

$$.Object = {"": ";",
  toString$0: function(_) {
    return "Instance of '" + $.S($.Primitives_objectTypeName(this)) + "'";
  }
};

$$.StringBuffer = {"": "Object;_contents",
  get$length: function(_) {
    return this._contents.length;
  },
  write$1: function(obj) {
    if (typeof obj !== "string")
      return this.write$1$bailout(1, obj);
    this._contents = this._contents + obj;
  },
  write$1$bailout: function(state0, obj) {
    var str = typeof obj === "string" ? obj : $.S(obj);
    this._contents = this._contents + str;
  },
  toString$0: function(_) {
    return this._contents;
  },
  StringBuffer$1: function($content) {
    this._contents = $content;
  }
};

$$.TurnMessage = {"": "Object;playerId,galaxy"};

$$.TurnResult = {"": "Object;orders,consoleMessage,error",
  TurnResult$2: function(orders, message) {
    this.consoleMessage = message;
    this.error = "";
  }
};

$$.Galaxy = {"": "Object;width,height,content,firstPlayerHome,secondPlayerHome,fleet",
  Galaxy$2: function(width, height) {
    this.content = $.List_List($);
    this.fleet = $.List_List($);
  }
};

$$.IA = {"": "Object;id<",
  getOrders$1: function(context) {
    return $.List_List($);
  },
  getNearestEnnemyPlanet$2: function(source, candidats) {
    var t1, result, t2, t3, t4, t5, currentDist, i, element;
    if (typeof candidats !== "string" && (typeof candidats !== "object" || candidats === null || candidats.constructor !== Array && !$.getInterceptor(candidats).$isJavaScriptIndexingBehavior))
      return this.getNearestEnnemyPlanet$2$bailout(1, source, candidats);
    t1 = $.getInterceptor$as(candidats);
    if (0 >= candidats.length)
      throw $.ioore(0);
    result = candidats[0];
    t2 = $.Point$(source.get$x(), source.get$y());
    t3 = $.Point$(result.get$x(), result.get$y());
    t4 = t3.x;
    t5 = t2.x;
    if (typeof t5 !== "number")
      return this.getNearestEnnemyPlanet$2$bailout(2, source, candidats, t1, result, t2, t4, t3, t5);
    if (typeof t4 !== "number")
      throw t4.$sub();
    t5 = t4 - t5;
    t4 = Math.pow(t5, 2);
    t3 = t3.y;
    t2 = t2.y;
    if (typeof t2 !== "number")
      return this.getNearestEnnemyPlanet$2$bailout(3, source, candidats, t1, result, t2, t4, t3);
    if (typeof t3 !== "number")
      throw t3.$sub();
    t2 = t3 - t2;
    t2 = t4 + Math.pow(t2, 2);
    currentDist = Math.sqrt(t2);
    for (i = 0; i < candidats.length; ++i) {
      element = candidats[i];
      t2 = $.Point$(source.get$x(), source.get$y());
      t3 = $.Point$(element.get$x(), element.get$y());
      t4 = t3.x;
      t5 = t2.x;
      if (typeof t5 !== "number")
        return this.getNearestEnnemyPlanet$2$bailout(4, source, candidats, t1, result, t2, t4, t3, t5, currentDist, i, element);
      if (typeof t4 !== "number")
        throw t4.$sub();
      t5 = t4 - t5;
      t4 = Math.pow(t5, 2);
      t3 = t3.y;
      t2 = t2.y;
      if (typeof t2 !== "number")
        return this.getNearestEnnemyPlanet$2$bailout(5, source, candidats, t1, result, t2, t4, t3, 0, currentDist, i, element);
      if (typeof t3 !== "number")
        throw t3.$sub();
      t2 = t3 - t2;
      t2 = t4 + Math.pow(t2, 2);
      if (currentDist > Math.sqrt(t2)) {
        t2 = $.Point$(source.get$x(), source.get$y());
        t3 = $.Point$(element.get$x(), element.get$y());
        t4 = t3.x;
        t5 = t2.x;
        if (typeof t5 !== "number")
          return this.getNearestEnnemyPlanet$2$bailout(6, source, candidats, t1, 0, t2, t4, t3, t5, 0, i, element);
        if (typeof t4 !== "number")
          throw t4.$sub();
        t5 = t4 - t5;
        t4 = Math.pow(t5, 2);
        t3 = t3.y;
        t2 = t2.y;
        if (typeof t2 !== "number")
          return this.getNearestEnnemyPlanet$2$bailout(7, source, candidats, t1, 0, t2, t4, t3, 0, 0, i, element);
        if (typeof t3 !== "number")
          throw t3.$sub();
        t2 = t3 - t2;
        t2 = t4 + Math.pow(t2, 2);
        currentDist = Math.sqrt(t2);
        result = element;
      }
    }
    return result;
  },
  getNearestEnnemyPlanet$2$bailout: function(state0, source, candidats, t1, result, t2, t4, t3, t5, currentDist, i, element) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$as(candidats);
        result = t1.$index(candidats, 0);
        t2 = $.Point$(source.get$x(), source.get$y());
        t3 = $.Point$(result.get$x(), result.get$y());
        t4 = t3.x;
        t5 = t2.x;
      case 2:
        state0 = 0;
        if (typeof t4 !== "number")
          throw t4.$sub();
        t5 = $.$sub$n(t4, t5);
        t4 = Math.pow(t5, 2);
        t3 = t3.y;
        t2 = t2.y;
      case 3:
        state0 = 0;
        if (typeof t3 !== "number")
          throw t3.$sub();
        t2 = $.$sub$n(t3, t2);
        t2 = t4 + Math.pow(t2, 2);
        currentDist = Math.sqrt(t2);
        i = 0;
      default:
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!(i < t1.get$length(candidats)))
                  break L0;
                element = t1.$index(candidats, i);
                t2 = $.Point$(source.get$x(), source.get$y());
                t3 = $.Point$(element.get$x(), element.get$y());
                t4 = t3.x;
                t5 = t2.x;
              case 4:
                state0 = 0;
                if (typeof t4 !== "number")
                  throw t4.$sub();
                t5 = $.$sub$n(t4, t5);
                t4 = Math.pow(t5, 2);
                t3 = t3.y;
                t2 = t2.y;
              case 5:
                state0 = 0;
                if (typeof t3 !== "number")
                  throw t3.$sub();
                t2 = $.$sub$n(t3, t2);
                t2 = t4 + Math.pow(t2, 2);
              default:
                if (state0 === 7 || state0 === 6 || state0 === 0 && currentDist > Math.sqrt(t2))
                  switch (state0) {
                    case 0:
                      t2 = $.Point$(source.get$x(), source.get$y());
                      t3 = $.Point$(element.get$x(), element.get$y());
                      t4 = t3.x;
                      t5 = t2.x;
                    case 6:
                      state0 = 0;
                      if (typeof t4 !== "number")
                        throw t4.$sub();
                      t5 = $.$sub$n(t4, t5);
                      t4 = Math.pow(t5, 2);
                      t3 = t3.y;
                      t2 = t2.y;
                    case 7:
                      state0 = 0;
                      if (typeof t3 !== "number")
                        throw t3.$sub();
                      t2 = $.$sub$n(t3, t2);
                      t2 = t4 + Math.pow(t2, 2);
                      currentDist = Math.sqrt(t2);
                      result = element;
                  }
                ++i;
            }
        return result;
    }
  },
  messageHandler$1: function($event) {
    var t1, result;
    t1 = $event.data;
    this.id = t1.playerId;
    $.TurnResult$(this.getOrders$1(t1.galaxy), this.debugMessage);
    result = true;
    return result;
  }
};

$$.Order = {"": "Object;numUnits,sourceID,targetID"};

$$.Planet = {"": "Object;id<,population<,x<,y<"};

$$.Point = {"": "Object;x<,y<"};

$$.Ship = {"": "Object;"};

$$.TestData = {"": "Object;data"};

$$.MyIA = {"": "IA;id,color,name,debugMessage,script",
  getOrders$1: function(context) {
    var result, myPlanets, otherPlanets, i, myPlanet, target;
    result = $.List_List($);
    myPlanets = this.get$utils().get$GameUtil().getPlayerPlanets$2(this.id, context);
    if (typeof myPlanets !== "string" && (typeof myPlanets !== "object" || myPlanets === null || myPlanets.constructor !== Array && !$.getInterceptor(myPlanets).$isJavaScriptIndexingBehavior))
      return this.getOrders$1$bailout1(1, context, myPlanets, result);
    otherPlanets = this.get$utils().get$GameUtil().getEnnemyPlanets$2(this.id, context);
    if (otherPlanets != null && $.get$length$as(otherPlanets) > 0)
      for (i = 0; i < myPlanets.length; ++i) {
        myPlanet = myPlanets[i];
        target = this.getNearestEnnemyPlanet$2(myPlanet, otherPlanets);
        if ($.$ge$n(myPlanet.get$population(), 50))
          result.push($.Order$(myPlanet.get$id(), target.get$id(), 40));
      }
    return result;
  },
  getOrders$1$bailout1: function(state0, context, myPlanets, result) {
    var otherPlanets, t1, i, myPlanet, target;
    otherPlanets = this.get$utils().get$GameUtil().getEnnemyPlanets$2(this.id, context);
    if (otherPlanets != null && $.get$length$as(otherPlanets) > 0)
      for (t1 = $.getInterceptor$as(myPlanets), i = 0; i < t1.get$length(myPlanets); ++i) {
        myPlanet = t1.$index(myPlanets, i);
        target = this.getNearestEnnemyPlanet$2(myPlanet, otherPlanets);
        if ($.$ge$n(myPlanet.get$population(), 50))
          result.push($.Order$(myPlanet.get$id(), target.get$id(), 40));
      }
    return result;
  }
};

// Bound closures
Isolate.$finishClasses($$, $, null);
$$ = null;

$.ListIterator$ = function(iterable) {
  return new $.ListIterator(iterable, iterable.length, 0, null);
};

$.ToString__emitValue = function(i, result, visiting) {
  var isList, t1, first, e;
  visiting.push(i);
  isList = typeof i === "object" && i !== null && (i.constructor === Array || !!$.getInterceptor(i).$isList);
  result.write$1(isList ? "[" : "{");
  for (t1 = $.get$iterator$a(i), first = true; t1.moveNext$0(); first = false) {
    e = t1.get$current();
    if (!first)
      result.write$1(", ");
    $.ToString__emitObject(e, result, visiting);
  }
  result.write$1(isList ? "]" : "}");
  if (0 >= visiting.length)
    throw $.ioore(0);
  visiting.pop();
};

$.ToString__emitObject = function(o, result, visiting) {
  if (typeof o === "object" && o !== null && (o.constructor === Array || !!$.getInterceptor(o).$isIterable))
    if ($.ToString__containsRef(visiting, o))
      result.write$1(typeof o === "object" && o !== null && (o.constructor === Array || !!$.getInterceptor(o).$isList) ? "[...]" : "{...}");
    else
      $.ToString__emitValue(o, result, visiting);
  else
    result.write$1(o);
};

$.ToString__containsRef = function(i, ref) {
  var t1;
  for (t1 = $.JSArray_methods.get$iterator(i); t1.moveNext$0();)
    if (t1.get$current() === ref)
      return true;
  return false;
};

$.getDispatchProperty = function(object) {
  return object[$.dispatchPropertyName];
};

$.setDispatchProperty = function(object, value) {
  object[$.dispatchPropertyName] = value;
};

$.getNativeInterceptor = function(object) {
  var record, proto, objectProto;
  record = $.getDispatchProperty(object);
  if (record != null) {
    proto = record.p;
    if (false === proto)
      return record.i;
    if (true === proto)
      return object;
    objectProto = Object.getPrototypeOf(object);
    if (proto === objectProto)
      return record.i;
    if (record.e === objectProto)
      return proto(object, record);
  }
  record = $.lookupDispatchRecord(object);
  $.setDispatchProperty(Object.getPrototypeOf(object), record);
  return $.getNativeInterceptor(object);
};

$.S = function(value) {
  var res;
  if (typeof value === "string")
    return value;
  if (typeof value === "number") {
    if (value !== 0)
      return "" + value;
  } else if (true === value)
    return "true";
  else if (false === value)
    return "false";
  else if (value == null)
    return "null";
  res = $.toString$0(value);
  if (typeof res !== "string")
    throw $.wrapException($.ArgumentError$(value));
  return res;
};

$.Primitives_objectTypeName = function(object) {
  var $name, decompiled, t1;
  $name = $.constructorNameFallback(object);
  if ($name === "Object") {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      $name = decompiled;
  }
  t1 = $.getInterceptor$s($name);
  return t1.codeUnitAt$1($name, 0) === 36 ? t1.substring$1($name, 1) : $name;
};

$.ioore = function(index) {
  if (typeof index !== "number" || Math.floor(index) !== index)
    $.throwExpression($.ArgumentError$(index));
  throw $.wrapException($.RangeError$value(index));
};

$.wrapException = function(ex) {
  var wrapper;
  if (ex == null)
    ex = $.C_NullThrownError;
  wrapper = $.DartError$(ex);
  if (!!Error.captureStackTrace)
    Error.captureStackTrace(wrapper, $.wrapException);
  else
    wrapper.stack = new Error().stack;
  return wrapper;
};

$.throwExpression = function(ex) {
  throw $.wrapException(ex);
};

$.DartError$ = function(dartException) {
  var t1 = new $.DartError();
  t1.DartError$1(dartException);
  return t1;
};

$.DartError_toStringWrapper = function() {
  return $.toString$0(this);
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.typeNameInWebKitCommon = function(tag) {
  var $name = tag;
  if ($name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if ($name === "AudioChannelMerger")
    return "ChannelMergerNode";
  if ($name === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if ($name === "AudioGainNode")
    return "GainNode";
  if ($name === "AudioPannerNode")
    return "PannerNode";
  if ($name === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if ($name === "Oscillator")
    return "OscillatorNode";
  if ($name === "RealtimeAnalyserNode")
    return "AnalyserNode";
  if ($name === "IDBVersionChangeRequest")
    return "IDBOpenDBRequest";
  return $name;
};

$.typeNameInOpera = function(obj) {
  return $.constructorNameFallback(obj);
};

$.typeNameInFirefox = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "BeforeUnloadEvent")
    return "Event";
  if ($name === "CSS2Properties")
    return "CSSStyleDeclaration";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "DragEvent")
    return "MouseEvent";
  if ($name === "GeoGeolocation")
    return "Geolocation";
  if ($name === "WorkerMessageEvent")
    return "MessageEvent";
  if ($name === "XMLDocument")
    return "Document";
  return $name;
};

$.typeNameInIE = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if ($name === "BeforeUnloadEvent")
    return "Event";
  if ($name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "DragEvent")
    return "MouseEvent";
  if ($name === "HTMLDDElement")
    return "HTMLElement";
  if ($name === "HTMLDTElement")
    return "HTMLElement";
  if ($name === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if ($name === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if ($name === "HTMLPhraseElement")
    return "HTMLElement";
  if ($name === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if ($name === "Position")
    return "Geoposition";
  if ($name === "Object")
    if (window.DataView && obj instanceof window.DataView)
      return "DataView";
  return $name;
};

$.constructorNameFallback = function(object) {
  var $constructor, $name, t1, string;
  if (object == null)
    return "Null";
  $constructor = object.constructor;
  if (typeof $constructor === "function") {
    $name = $constructor.name;
    if (typeof $name === "string")
      t1 = $name !== "" && $name !== "Object" && $name !== "Function.prototype";
    else
      t1 = false;
    if (t1)
      return $name;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.getFunctionForTypeNameOf = function() {
  if (typeof navigator !== "object")
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.defineNativeMethodsFinish = function() {
};

$.lookupDispatchRecord = function(obj) {
  var hasOwnPropertyFunction, tag, map, interceptor, secondTag;
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  tag = $._getTypeNameOf.call$1(obj);
  map = $.interceptorsByTag;
  interceptor = hasOwnPropertyFunction.call(map, tag) ? map[tag] : null;
  if (interceptor == null) {
    secondTag = $.alternateTag(obj, tag);
    if (secondTag != null) {
      map = $.interceptorsByTag;
      interceptor = hasOwnPropertyFunction.call(map, secondTag) ? map[secondTag] : null;
    }
  }
  if (interceptor == null)
    interceptor = {__what: "interceptor not found", __tag: tag};
  if (true === $.leafTags[tag])
    return {i: interceptor, p: false, e: null};
  else
    return {i: interceptor, p: Object.getPrototypeOf(obj), e: null};
};

$.Error_safeToString = function(object) {
  if (false)
    return $.JSArray_methods.toString$0(object);
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.ConcurrentModificationError$ = function(modifiedObject) {
  return new $.ConcurrentModificationError(modifiedObject);
};

$.List_List = function($length) {
  var t1, result;
  t1 = $ === $length;
  if (t1)
    $length = null;
  if (t1)
    return new Array(0);
  if (true)
    throw $.wrapException($.ArgumentError$("Length must be a positive integer: " + $.S($length) + "."));
  result = new Array($length);
  result.fixed$length = true;
  return result;
};

$.StringBuffer$ = function($content) {
  var t1 = new $.StringBuffer("");
  t1.StringBuffer$1($content);
  return t1;
};

$.TurnMessage$ = function(playerId, galaxy) {
  return new $.TurnMessage(playerId, galaxy);
};

$.TurnResult$ = function(orders, message) {
  var t1 = new $.TurnResult(orders, null, null);
  t1.TurnResult$2(orders, message);
  return t1;
};

$.Galaxy$ = function(width, height) {
  var t1 = new $.Galaxy(width, height, null, null, null, null);
  t1.Galaxy$2(width, height);
  return t1;
};

$.Order$ = function(sourceID, targetID, numUnits) {
  return new $.Order(numUnits, sourceID, targetID);
};

$.Point$ = function(x, y) {
  return new $.Point(x, y);
};

$.main = function() {
  $._ia = $.MyIA$();
  var testData = $.TestData$($.TurnMessage$(0, $.Galaxy$(10, 10)));
  $._ia.messageHandler$1(testData);
};

$.TestData$ = function(data) {
  return new $.TestData(data);
};

$.MyIA$ = function() {
  return new $.MyIA("", 0, "noName", "", "");
};

$.wrapException.call$1 = $.wrapException;
$.wrapException.$name = "wrapException";
$.DartError_toStringWrapper.call$0 = $.DartError_toStringWrapper;
$.DartError_toStringWrapper.$name = "DartError_toStringWrapper";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.C_NullThrownError = new $.NullThrownError();
$.JSInt_methods = $.JSInt.prototype;
$.JSArray_methods = $.JSArray.prototype;
$.dispatchPropertyName = "_zzyzx";
$._getTypeNameOf = null;
$.interceptorsByTag = null;
$.leafTags = null;
$._ia = null;
$.$ge$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver >= a0;
  return $.getInterceptor$n(receiver).$ge(receiver, a0);
};
$.$gt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver > a0;
  return $.getInterceptor$n(receiver).$gt(receiver, a0);
};
$.$sub$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver - a0;
  return $.getInterceptor$n(receiver).$sub(receiver, a0);
};
$.get$iterator$a = function(receiver) {
  return $.getInterceptor$a(receiver).get$iterator(receiver);
};
$.get$length$as = function(receiver) {
  return $.getInterceptor$as(receiver).get$length(receiver);
};
$.toString$0 = function(receiver) {
  return $.getInterceptor(receiver).toString$0(receiver);
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == "function")
    return $.JSFunction.prototype;
  if (typeof receiver == "boolean")
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  if (Object.getPrototypeOf(receiver) === Object.prototype)
    return $.Interceptor.prototype;
  return $.getNativeInterceptor(receiver);
};
$.getInterceptor$a = function(receiver) {
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return receiver;
};
$.getInterceptor$as = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return receiver;
};
$.getInterceptor$n = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return receiver;
  return receiver;
};
$.getInterceptor$s = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return receiver;
  return receiver;
};

var $ = null;
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
// BEGIN invoke [main].
if (typeof document !== "undefined" && document.readyState !== "complete") {
  document.addEventListener("readystatechange", function () {
    if (document.readyState == "complete") {
      if (typeof dartMainRunner === "function") {
        dartMainRunner(function() { $.main(); });
      } else {
        $.main();
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === "function") {
    dartMainRunner(function() { $.main(); });
  } else {
    $.main();
  }
}
// END invoke [main].
function init() {
  Isolate.$isolateProperties = {};
  function generateAccessor(field, prototype) {
    var len = field.length;
    var code = field.charCodeAt(len - 1);
    code = code >= 60 && code <= 64 ? code - 59 : code >= 123 && code <= 126 ? code - 117 : code >= 37 && code <= 43 ? code - 27 : 0;
    if (code) {
      var getterCode = code & 3;
      var setterCode = code >> 2;
      var accessorName = field = field.substring(0, len - 1);
      var divider = field.indexOf(":");
      if (divider > 0) {
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (getterCode) {
        var args = getterCode & 2 ? "receiver" : "";
        var receiver = getterCode & 1 ? "this" : "receiver";
        var body = "return " + receiver + "." + field;
        prototype["get$" + accessorName] = new Function(args, body);
      }
      if (setterCode) {
        var args = setterCode & 2 ? "receiver, value" : "value";
        var receiver = setterCode & 1 ? "this" : "receiver";
        var body = receiver + "." + field + " = value";
        prototype["set$" + accessorName] = new Function(args, body);
      }
    }
    return field;
  }
  Isolate.$isolateProperties.$generateAccessor = generateAccessor;
  function defineClass(name, cls, fields, prototype) {
    var constructor;
    if (typeof fields == "function") {
      constructor = fields;
    } else {
      var str = "function " + cls + "(";
      var body = "";
      for (var i = 0; i < fields.length; i++) {
        if (i != 0)
          str += ", ";
        var field = fields[i];
        field = generateAccessor(field, prototype);
        str += field;
        body += "this." + field + " = " + field + ";\n";
      }
      str += ") {" + body + "}\nreturn " + cls;
      constructor = new Function(str)();
    }
    constructor.prototype = prototype;
    constructor.builtin$cls = name;
    return constructor;
  }
  var supportsProto = false;
  var tmp = defineClass("c", "c", ["f?"], {}).prototype;
  if (tmp.__proto__) {
    tmp.__proto__ = {};
    if (typeof tmp.get$f != "undefined")
      supportsProto = true;
  }
  Isolate.$finishClasses = function(collectedClasses, isolateProperties, existingIsolateProperties) {
    var pendingClasses = {};
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var cls in collectedClasses) {
      if (hasOwnProperty.call(collectedClasses, cls)) {
        var desc = collectedClasses[cls];
        var classData = desc[""], supr, name = cls, fields = classData;
        if (typeof classData == "string") {
          var split = classData.split("/");
          if (split.length == 2) {
            name = split[0];
            fields = split[1];
          }
        }
        if (typeof fields == "string") {
          var s = fields.split(";");
          fields = s[1] == "" ? [] : s[1].split(",");
          supr = s[0];
        } else {
          supr = desc.super;
          if (!!desc.$name)
            name = desc.$name;
        }
        isolateProperties[cls] = defineClass(name, cls, fields, desc);
        if (supr)
          pendingClasses[cls] = supr;
      }
    }
    var finishedClasses = {};
    function finishClass(cls) {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      if (hasOwnProperty.call(finishedClasses, cls))
        return;
      finishedClasses[cls] = true;
      var superclass = pendingClasses[cls];
      if (!superclass || typeof superclass != "string")
        return;
      finishClass(superclass);
      var constructor = isolateProperties[cls];
      var superConstructor = isolateProperties[superclass];
      if (!superConstructor)
        superConstructor = existingIsolateProperties[superclass];
      var prototype = constructor.prototype;
      if (supportsProto) {
        prototype.__proto__ = superConstructor.prototype;
        prototype.constructor = constructor;
      } else {
        function tmp() {
        }
        tmp.prototype = superConstructor.prototype;
        var newPrototype = new tmp();
        constructor.prototype = newPrototype;
        newPrototype.constructor = constructor;
        for (var member in prototype) {
          if (!member)
            continue;
          if (hasOwnProperty.call(prototype, member)) {
            newPrototype[member] = prototype[member];
          }
        }
      }
    }
    for (var cls in pendingClasses)
      finishClass(cls);
  };
  Isolate.$finishIsolateConstructor = function(oldIsolate) {
    var isolateProperties = oldIsolate.$isolateProperties;
    isolateProperties.$currentScript = typeof document == "object" ? document.currentScript || document.scripts[document.scripts.length - 1] : null;
    var isolatePrototype = oldIsolate.prototype;
    var str = "{\n";
    str += "var properties = Isolate.$isolateProperties;\n";
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var staticName in isolateProperties) {
      if (hasOwnProperty.call(isolateProperties, staticName)) {
        str += "this." + staticName + "= properties." + staticName + ";\n";
      }
    }
    str += "}\n";
    var newIsolate = new Function(str);
    newIsolate.prototype = isolatePrototype;
    isolatePrototype.constructor = newIsolate;
    newIsolate.$isolateProperties = isolateProperties;
    newIsolate.$finishClasses = oldIsolate.$finishClasses;
    return newIsolate;
  };
}
//@ sourceMappingURL=planetwarssdk_dart.dart.js.map
